<!-- Bulle -->
<sprite_type name="bulle" xmlns:xi="http://www.w3.org/2001/XInclude">
  <graphics>
    <graphic id="pic" type="graphic_from_file">
      <args>
	<val_string name="filename" value="medias/divers/pics_bulle.png"/>
	<val_size name="size" w="32" h="32"/>
	<val_int name="layer" value="3"/>
      </args>
      <script>
	self.hide()
      </script>
    </graphic>

    
    <graphic id="main" type="graphic_from_drawing_script">
      <args>
	<val_int name="layer" value="3"/>
	<val_string name="drawing_id" value="bulle"/>
      </args>
      <script>

	function self.drawing_script()
	local graphics=self.parent;
	local dr=self.create("box",{val_color(255,255,255),val_size(70,70)})
	self.write(dr,0,"filledEllipse",{{x=32,y=16},{r=200,g=200,b=200},{x=32,y=16}});	      
	self.write(dr,0,"ellipse",{{x=32,y=16},{r=0,g=0,b=0},{x=32,y=16}});	      
	
	self.write(dr,0,"set_alpha",{200,{r=255,g=255,b=255}});
	
	return dr
	end
	
      </script>
    </graphic>

    <graphic id="bulle" type="graphic_from_drawing_script">
      <args>
	<val_int name="layer" value="3"/>
	<val_string name="drawing_id" value="bulle"/>
      </args>
      <script>
	self.hide();
	function self.drawing_script()
	local graphics=self.parent;
	local dr=self.create("box",{val_color(255,255,255),val_size(70,70)})
	self.write(dr,0,"filledEllipse",{{x=32,y=16},{r=200,g=200,b=200},{x=32,y=16}});	      
	self.write(dr,0,"ellipse",{{x=32,y=16},{r=0,g=0,b=0},{x=32,y=16}});	      
	
	self.write(dr,0,"set_alpha",{200,{r=255,g=255,b=255}});
	
	return dr
	end
	
      </script>
    </graphic>

  </graphics>
  
  <states>
    <state id="statique">
      
      <action id="afficher" type="action_intime"
	      xmlns:xi="http://www.w3.org/2001/XInclude">
	<args>
	  <val_time name="limit" h="0" m="10" s="0" f="0"/>
	</args>
	<script>
	  function self.on_start(v)
	  local obj=self.parent.parent.parent;

	  end
	  function self.on_loop()
	  self.parent.parent.set_state("fadout",{})
	  end
	</script>
      </action>

      <action id="fx" type="action_livefx">
	<args>
	  <val_int name="refresh" value="300"/>
	  <val_list name="frames">
	    <val_int value="6"/>
	  </val_list>
	</args>
	<script>		    
	  <xi:include href="bulle_script.lua" parse="text"/>
	  function self.drawing_script(dr,fr)
	  return self.my_drawing_script(dr, 28*fr)
	  end
	</script>
      </action>
      
      <action id="position" type="action_lua">
	<script>
	  function self.on_loop()
	  local root=main()
	  local obj=self.parent.parent.parent;
	  obj.jump(obj.attache.get_pixel_x()-root.stages.engine.game.visual.get_x()-35,obj.attache.get_pixel_y()-root.stages.engine.game.visual.get_y()-60)
	  end
	</script>
      </action>
    </state>
	  
    <state id="fadin">
      <action id="position" type="action_lua">
	<script>
	  function self.on_loop()
	  local root=main()
	  local obj=self.parent.parent.parent;
	  obj.jump(obj.attache.get_pixel_x()-root.stages.engine.game.visual.get_x()-35,obj.attache.get_pixel_y()-root.stages.engine.game.visual.get_y()-60)
	  end
	</script>
      </action>

      <action id="fx" type="action_livefx">
	<args>
	  <val_int name="refresh" value="2"/>
	  <val_list name="frames">
	    <val_int value="1"/>
	    <val_int value="2"/>
	    <val_int value="3"/>
	    <val_int value="4"/>
	    <val_int value="5"/>
	    <val_int value="6"/>
	    <val_int value="7"/>
	  </val_list>
	</args>
	<script>		    
	  <xi:include href="bulle_script.lua" parse="text"/>
	  function self.drawing_script(dr,fr)
	  return self.my_drawing_script(dr, 28*fr)
	  end
	</script>
      </action>
    </state>

     <state id="fadout">
       <action id="position" type="action_lua">
	 <script>
	  function self.on_loop()
	  local root=main()
	  local obj=self.parent.parent.parent;
	  if obj.attache~=nil then
	  obj.jump(obj.attache.get_pixel_x()-root.stages.engine.game.visual.get_x()-35,obj.attache.get_pixel_y()-root.stages.engine.game.visual.get_y()-60)
	  end
	  end
	</script>
       </action>
       <action id="fx" type="action_livefx">
	 <args>
	   <val_int name="refresh" value="2"/>
	   <val_list name="frames">
	     <val_int value="1"/>
	     <val_int value="2"/>
	     <val_int value="3"/>
	     <val_int value="4"/>
	     <val_int value="5"/>
	     <val_int value="6"/>
	     <val_int value="7"/>
	   </val_list>
	 </args>
	 <script>

	  <xi:include href="bulle_script.lua" parse="text"/>
	  function self.drawing_script(dr,fr)
	  return self.my_drawing_script(dr, 28*(7-fr))
	  end
	   

	  function self.on_loop()
	  if (self.get_frame()==7) then	   
	  local root=main()
	  local obj=self.parent.parent.parent;
	  obj.attache.bulle=nil
--	  root.stages.engine.game.map.objets[obj.attache.get_id()].bulle=nil
	  root.bulle=nil
	  obj.graphics.main.hide();
	  
	  self.parent.parent.set_no_state()
	  end

	  end

	   function self.on_stop()
	   end
	 </script>
       </action>
     </state>
     
  </states>
</sprite_type>
